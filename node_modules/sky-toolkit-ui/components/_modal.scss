/* ==========================================================================
   COMPONENTS / #MODAL
   ========================================================================== */

/**
 * ⚠️ DEPRECATION WARNING
 * The following classes will be deprecated in sky-toolkit-ui@3.0.0, please use
 * the alternatives detailed below:
 *   ◦ `.c-modal__close-label` → `c-link__label`
 *   ◦ `c-modal__close-icon` ⨯
 *      No longer necessary, please use `c-link c-link--close` on the parent.
 */

// Imports
@import "sky-toolkit-core/tools";

/* Base
  ============================================ */

/**
 * Modal Cover
 *
 * A container for the Modal which provides a semi-transparent backdrop
 * for the Modal and it's contents.
 *
 * 1. Fill the entire viewport.
 * 2. Ensure Modal is layered on top of the rest of the document.
 * 3. Force the browser to create a new layer and send rendering to the GPU.
 */
.c-modal-cover {
  @include edge-position(); /* [1] */
  position: fixed; /* [1] */
  z-index: 251; /* [2] */
  transform: translateZ(0); /* [3] */
  background-color: rgba(color(white), 0.75);
}

/**
 * Modal
 *
 * This is where the modal itself resides with a close button.
 *
 * 1. Fill entire viewport on Mobile only.
 * 2. Center the content at larger breakpoints.
 * 3. When content is larger than the viewport, allow for scrolling
 *    and a degree of margin around the Modal at larger breakpoints.
 */
.c-modal {
  position: fixed; /* [1] */
  top: 0; /* [1] */
  left: 0; /* [1] */
  height: 100%; /* [1] */
  width: 100%; /* [1] */
  background-color: color(white);
  border-radius: $global-border-radius;
  box-shadow: $global-shadow;
  overflow-y: auto; /* [3] */
  -webkit-overflow-scrolling: touch;

  @include mq($from: medium) {
    left: 50%; /* [2] */
    top: 50%; /* [2] */
    height: auto; /* [2] */
    transform: translate(-50%, -50%); /* [2] */
    max-width: 30em;
    max-height: calc(100% - #{$global-spacing-unit}); /* [3] */
  }
}

/**
 * Modal body
 *
 * This is where the content for your Modal resides, wrapping it in a
 * padded white area.
 *
 * 1. Increase padding on larger breakpoints. Reduced on the top
 *    to account for the close button being there.
 */
.c-modal__body {
  padding: $global-spacing-unit;

  @include mq($from: medium) {
    padding: $global-spacing-unit $global-spacing-unit-large $global-spacing-unit-large $global-spacing-unit-large; /* [1] */
  }
}

/**
 * Modal close button
 *
 * The button to close the Modal. This sits on the right side
 * of the Modal header.
 *
 * 1. Normalise the buttons spacing to visually mirror the modal component.
 */
.c-modal__close {
  margin-top: $global-spacing-unit; /* [1] */
  margin-right: $global-spacing-unit; /* [1] */
}

/**
 * Modal close button icon - ⚠️ [SEE DEPRECATION WARNING]
 *
 * The icon for the close button. This sits to the right of
 * the text.
 *
 * 1. Ensure the close button's icon is vertically centered
 *    to it's text.
 * 2. Just a tad spacing between the icon and the label.
 */
.c-modal__close-icon {
  vertical-align: middle; /* [1] */
  margin-left: $global-spacing-unit-small; /* [2] */
}

/**
 * Modal close button label - ⚠️ [SEE DEPRECATION WARNING]
 *
 * Sits to the left of the icon, hidden on smaller screens.
 */
.c-modal__close-label {
  @include mq($until: small) {
    @include hide-visually();
  }
}
